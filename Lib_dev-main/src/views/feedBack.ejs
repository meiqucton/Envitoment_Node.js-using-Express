    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Tư vấn sản phẩm</title>
        
        <script src="/socket.io/socket.io.js"></script>
        <style>
            /* Thêm CSS để cải thiện giao diện */
            #messages {
                border: 1px solid #ccc;
                padding: 10px;
                height: 300px;
                overflow-y: auto;
                margin-top: 10px;
            }
            .message {
                margin-bottom: 10px;
            }
            .message strong {
                display: block;
            }
        </style>
    </head>
    <body>
        <div class="in4_Products">
            <h1><%= in4_Products.name %></h1>
            <img src="<%= in4_Products.image %>" alt="<%= in4_Products.name %>">
            <p><strong>Giá: </strong><%= in4_Products.price %> VND</p>
            <p><strong>Người bán: </strong><%= in4_Products.userName %></p>
            <input id="messageInput" type="text" placeholder="Type a message..."/>
            <button id="FeedBackInformation">Send</button>
        </div>

        <div id="messages"></div>

        <script>
            const socket = io();
            const client_Id = '<%= user_Id %>';
            const Store_id = '<%= in4_Products.userId %>';
            const nameProduct = '<%= in4_Products.name %>';
            const price = '<%= in4_Products.price %>';
            const product_id = '<%= in4_Products._id %>';
            const userName = '<%= UserName %>';
            const roomId = [client_Id, Store_id].sort().join('-');
            socket.emit('joinFeedBack', roomId);
            document.getElementById('FeedBackInformation').addEventListener('click', () => {
                const message = document.getElementById('messageInput').value;
                if (message.trim()) {
                    socket.emit('FeedBackInformation', {
                        user_Id: client_Id,
                        roomId,
                        Store_id,
                        nameProduct,
                        price,
                        message,
                        userName,
                        product_id,
                    });
                    document.getElementById('messageInput').value = '';
                }
            });
            socket.on('FeedBackInformation', (chatMessage) => {
                    if (chatMessage && chatMessage.userName && chatMessage.message) {
                        const messageDiv = document.createElement('div');
                        messageDiv.textContent = `${chatMessage.userName}: ${chatMessage.message}`;
                        document.getElementById('messages').appendChild(messageDiv);
                    }
                });
            socket.on('loadMessageFeedBack', (messages) => {
                    if (Array.isArray(messages)) {
                        messages.forEach((chatMessage) => {
                            if (chatMessage && chatMessage.userName && chatMessage.message) {
                                const messageDiv = document.createElement('div');
                                messageDiv.textContent = `${chatMessage.userName}: ${chatMessage.message}`;
                                document.getElementById('messages').appendChild(messageDiv);
                            }
                        });

                        // chức năng cuộn xuống để hiện tin nhăn mới nhất 
                        const messagesDiv = document.getElementById('messages');
                        messagesDiv.scrollTop = messagesDiv.scrollHeight;
                    }
                });
        </script>
    </body>
    </html>
